作者：王二22
链接：https://www.nowcoder.com/discuss/279984
来源：牛客网

1、给定多条公交线路（可以认为是环线），以及一个初始出发点，以及目的地。求乘坐最少公交车的次数（不存在则返回-1）。

  可以将每个线路看作一个set，然后题目就类似于leetcode的word ladder了。使用BFS搜索即可。

  最开始考虑成最少站点了，面试官提示以后，确定正确的思路。注意起点是换乘站点的考虑。然后面试官问，知不知道双端搜索，就是从头尾分别搜索，最后确定线路的方法。大概说了一下思路。


2、数学题。有一个一次只能读取buffer，一个不知道有多少元素的链表。现在想基于这个链表与这个buffer实现一个获取链表中随机元素的函数。

题目类似与leetcode的Linked List Random Node。要求one-pass的。
经过提示以后，大概理解了方法。
每次读取一个元素，保证每个元素的值在buffer的概率相等即可。
以 【1 2 3】为例。第一读到1，buffer的值就是1。取到1的概率就是100%。读入2以后，为了保证1，2在buffer的概率保持相等。那么1以50%的概率丢弃即可。读取3的时候，为了，保证1 2 3 概率相等。已知 1 2 都是 1/2 那么 让 1 2 的概率变成1/3，只要buffer以2/3的概率保持不变即可。依次类推。


1、两个排序数组的中位数。
写了O（n）的解法，介绍了一下lgn的方法的思路
2、概率题。 有n个人，m个坏人。每次检查一个人无论是不是坏人都会导致这个人死亡。那么查到第一个坏人的死掉好人的期望是多少。
先写了期望的计算公式，然后让我简单算了一下需要多少次加法，多少次乘法。估计复杂度。
如果是查到2个坏人的情况再计算了一下公式。时间复杂度很大，怎么办。考虑DP，我只推到出来了1个坏人的。
E(m,n) = n/m*0+ (m-n)/m *(E(m-1,n)+1)
k个人的当时没转过弯来。面试官就直接写出来了。

给定一个n*m的矩阵，从中找出a*a的矩阵，使得和最大。返回最大的数值。
计算一个n*m矩阵，每个是左上角元素和的值。然后再遍历计算。



1、损失函数 （MSE /huber loss/cross entropy/指数损失 ）
2、为什么分类用交叉熵而不用MSE？ （
https://blog.csdn.net/scythe666/article/details/78393821
用 MSE 计算 loss 的问题在于，通过 Softmax 输出的曲线是波动的，有很多局部的极值点。 即，非凸优化问题 (non-convex)
而 cross entropy 计算 loss，则依旧是一个凸优化问题，用梯度下降求解时，凸优化问题有很好的收敛特性。
https://blog.csdn.net/liuweiyuxiang/article/details/90707375
3、字符串处理。字典里面的key是长度为2~5的字符串，另外一个字符串从中间去掉连续的字符，最多去掉6个，剩下的字符串连接在字典中和key匹配，得到匹配的字符串的value
4、精确率，召回率以及ROC曲线的计算，PR曲线的画法。




